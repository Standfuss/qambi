{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "/home/abudaan/workspace/qambi/src/module.js",
    "/home/abudaan/workspace/qambi/src/song.js",
    "/home/abudaan/workspace/qambi/src/song_addeventlistener.js"
  ],
  "names": [],
  "mappings": "AAAA;ACAA,YAAY,CAAC;;;;IAEN,IAAI,2BAAM,WAAW;;AAE5B,IAAI,SAAS,GAAG;AACZ,QAAI,EAAE,OAAO;AACb,MAAE,EAAE,EAAE;AACN,QAAI,EAAE,EAAE;AACR,MAAE,EAAE,EAAE;AACN,MAAE,EAAE,EAAE;AACN,WAAO,EAAE,EAAE;AACX,UAAM,EAAE,KAAK;AACb,gBAAY,EAAE,SAAS,CAAC,YAAY,KAAK,SAAS;AAClD,QAAI,EAAE,KAAK;AACX,WAAO,EAAE,KAAK;AACd,YAAQ,EAAE,IAAI;AACd,QAAI,EAAE,KAAK;AACX,OAAG,EAAE,KAAK;AACV,OAAG,EAAE,KAAK;AACV,wBAAoB,EAAE,GAAG;AACzB,SAAK,EAAE,CAAC;AACR,cAAU,EAAE,CAAC;AACb,SAAK,EAAE,GAAG;AACV,cAAU,EAAE,GAAG,GAAC,IAAI;AACpB,wBAAoB,EAAE,KAAK;AAC3B,gBAAY,EAAE,OAAO;AACrB,qBAAiB,EAAE,KAAK;AACxB,eAAW,EAAE,KAAK;AAClB,kBAAc,EAAE,IAAI;AACpB,cAAU,EAAE,GAAG;AACf,eAAW,EAAE,IAAI;AACjB,aAAS,EAAE,CAAC;;AAEZ,eAAW,EAAE,EAAE;AACf,cAAU,EAAE,EAAE;AACd,eAAW,EAAE,EAAE;CAClB,CAAC;;AAEF,SAAS,CAAC,UAAU,GAAG,UAAS,MAAM,EAAC;AACnC,WAAO,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC;CAC3B,CAAA;;;iBAGc,SAAS;;;AC3CxB,YAAY,CAAC;;;;;;qCAEiC,yBAAyB;;IAA/D,gBAAgB,0BAAhB,gBAAgB;IAAE,aAAa,0BAAb,aAAa;;;AAEvC,IAAI,MAAM,GAAG,CAAC,CAAC;;IAET,IAAI;AAEG,WAFP,IAAI,CAEI,MAAM;0BAFd,IAAI;;AAGN,QAAI,CAAC,EAAE,GAAG,GAAG,GAAG,MAAM,EAAE,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;AAChD,QAAI,CAAC,MAAM,GAAG,MAAM,CAAC;GACtB;;uBALG,IAAI;AAQR,cAAU;;;aAAA,oBAAC,OAAO,EAAC;AACjB,eAAO,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;OAC/B;;;;AAED,QAAI;aAAA,gBAAE;AACJ,qBAAa,CAAC,MAAM,CAAC,CAAC;OACvB;;;;;;SAdG,IAAI;;;AAiBV,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;AACnD,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,aAAa,CAAC;;iBAE9B,IAAI;;;;;AC1BnB,IAAI,SAAS,GAAG,EAAE,CAAC;;AAEnB,SAAS,gBAAgB,CAAC,EAAE,EAAE,QAAQ,EAAC;AACrC,WAAS,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC;CAC1B;;AAED,SAAS,aAAa,CAAC,EAAE,EAAC;AACxB,OAAI,IAAI,GAAG,IAAI,SAAS,EAAC;AACvB,QAAG,SAAS,CAAC,cAAc,CAAC,GAAG,CAAC,EAAC;AAC/B,eAAS,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;KACpB;GACF;CACF;;QAE2B,gBAAgB,GAApC,gBAAgB;QACC,aAAa,GAA9B,aAAa",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "'use strict';\n\nimport Song from './song.js';\n\nlet sequencer = {\n    name: 'qambi',\n    ui: {},\n    util: {},\n    ua: '',\n    os: '',\n    browser: '',\n    legacy: false, // true if the browser uses an older version of the WebAudio API, source.noteOn() and source.noteOff instead of source.start() and source.stop()\n    record_audio: navigator.getUserMedia !== undefined,\n    midi: false,\n    webmidi: false,\n    webaudio: true,\n    jazz: false,\n    ogg: false,\n    mp3: false,\n    bitrate_mp3_encoding: 128,\n    debug: 4, // 0 = off, 1 = error, 2 = warn, 3 = info, 4 = log\n    debugLevel: 4, // 0 = off, 1 = error, 2 = warn, 3 = info, 4 = log\n    pitch: 440,\n    bufferTime: 350/1000, //seconds\n    autoAdjustBufferTime: false,\n    noteNameMode: 'sharp',\n    minimalSongLength: 60000, //millis\n    pauseOnBlur: false,\n    restartOnFocus: true,\n    defaultPPQ: 960,\n    overrulePPQ: true,\n    precision: 3, // means float with precision 3, e.g. 10.437\n\n    activeSongs: {}, // the songs that are currently loaded in memory\n    midiInputs: [],\n    midiOutputs: []\n};\n\nsequencer.createSong = function(config){\n    return new Song(config);\n}\n\n\nexport default sequencer;\n",
    "'use strict';\n\nimport {addEventListener, dispatchEvent} from './song_addeventlistener';\n\nlet songId = 0;\n\nclass Song{\n\n  constructor(config){\n    this.id = 'S' + songId++ + new Date().getTime();\n    this.config = config;\n  }\n\n  // add samples to the instrument after it has been created, this allows you to jit load the samples of an instrument\n  addSamples(samples){\n    console.log('added', samples);\n  }\n\n  stop(){\n    dispatchEvent('stop');\n  }\n}\n\nSong.prototype.addEventListener = addEventListener;\nSong.prototype.dispatchEvent = dispatchEvent;\n\nexport default Song;",
    "let listeners = {};\n\nfunction addEventListener(id, callback){\n  listeners[id] = callback;\n}\n\nfunction dispatchEvent(id){\n  for(let key in listeners){\n    if(listeners.hasOwnProperty(key)){\n      listeners[key](id);\n    }\n  }\n}\n\nexport {addEventListener as addEventListener};\nexport {dispatchEvent as dispatchEvent};"
  ]
}